import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
import pickle

# Load synthetic health data
data = pd.read_csv('synthetic_health_data.csv')

# Encode categorical features
encoder = LabelEncoder()
data['Gender'] = encoder.fit_transform(data['Gender'])

# Standardize numerical features
scaler = StandardScaler()
numerical_features = ['Age', 'BloodPressure', 'Cholesterol']
data[numerical_features] = scaler.fit_transform(data[numerical_features])

# Split data into features (X) and target (y)
X = data.drop(columns=['HighRisk', 'MemberID'])
y = data['HighRisk']

# Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize logistic regression model
model = LogisticRegression()

# Train the model
model.fit(X_train, y_train)

# Serialize the trained model
with open('models/risk_assessment_model.pkl', 'wb') as file:
    pickle.dump(model, file)

print("Model trained and saved successfully!")
